{"version":3,"sources":["Components/NavBar/NavBar.js","Contexts/ArticleContext.js","Containers/Accueil/Accueil.js","Containers/Form/Form.js","Containers/Content/Content.js","Contexts/DarkModeContext.js","Components/DarkBtn.js","App.js","index.js"],"names":["NavBar","useState","toggleMenu","setToggleMenu","window","innerWidth","width","setWidth","useEffect","changeWidth","addEventListener","removeEventListener","className","to","exact","onClick","activeClassName","ArticleContext","createContext","ArticleContextProvider","props","article","setArticle","fetchArticle","fetch","then","response","json","apiArt","i","push","title","content","body","id","onload","Provider","value","addArticle","art","newArticle","unshift","children","Accueil","useContext","ref","useRef","addRef","div","current","includes","map","item","pathname","replace","trim","state","v4","React","memo","Form","titleState","setTitleState","contentState","setContentState","color","setColor","message","setMessage","setTimeout","onSubmit","e","preventDefault","length","ajoutArt","htmlFor","onInput","linkedInput","target","type","linkedArea","style","Content","location","useLocation","DarkModeContext","DarkModeContextProvider","toggleMode","setToggleMode","changeMode","DarkBtn","App","basename","process","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3eef0d58.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport \"./NavBar.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default function NavBar() {\r\n  const [toggleMenu, setToggleMenu] = useState(false);\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n\r\n  useEffect(() => {\r\n    const changeWidth = () => {\r\n      setWidth(window.innerWidth);\r\n    };\r\n    window.addEventListener(\"resize\", changeWidth);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", changeWidth);\r\n    };\r\n  }, []);\r\n\r\n  const toggleNav = () => {\r\n    setToggleMenu(!toggleMenu);\r\n  };\r\n  return (\r\n    <nav>\r\n      <div className=\"small-nav\">\r\n        <NavLink to=\"/\" exact>\r\n          <h1>React-Blog</h1>\r\n        </NavLink>\r\n        <button onClick={toggleNav}>\r\n          <i className=\"fas fa-bars\"></i>\r\n        </button>\r\n      </div>\r\n      {(toggleMenu || width > 600) && (\r\n        <div className=\"nav-link\">\r\n          <NavLink to=\"/\" exact activeClassName=\"current\">\r\n            Accueil\r\n          </NavLink>\r\n          <NavLink to=\"/form\" exact activeClassName=\"current\">\r\n            Créer un article\r\n          </NavLink>\r\n        </div>\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n","import React, { createContext, useState, useEffect } from \"react\";\r\n\r\nexport const ArticleContext = createContext();\r\n\r\nconst ArticleContextProvider = (props) => {\r\n  const [article, setArticle] = useState([]);\r\n\r\n  const addArticle = (art) => {\r\n    const newArticle = [...article];\r\n    newArticle.unshift(art);\r\n    setArticle(newArticle);\r\n  };\r\n\r\n  ///////////////////////premier affichage//////////////////////\r\n  function fetchArticle() {\r\n    fetch(`https://jsonplaceholder.typicode.com/posts/`)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        const apiArt = [...article];\r\n\r\n        for (let i = 0; i < 20; i++) {\r\n          apiArt.push({\r\n            title: response[i].title,\r\n            content: response[i].body,\r\n            id: response[i].id,\r\n          });\r\n        }\r\n\r\n        setArticle(apiArt);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.onload = fetchArticle(20);\r\n  }, []);\r\n\r\n  return (\r\n    <ArticleContext.Provider value={{ article, addArticle, fetchArticle }}>\r\n      {props.children}\r\n    </ArticleContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ArticleContextProvider;\r\n","import \"./Accueil.css\";\r\nimport { v4 } from \"uuid\";\r\nimport React, { useContext, useRef } from \"react\";\r\nimport { ArticleContext } from \"../../Contexts/ArticleContext\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Accueil() {\r\n  const { article } = useContext(ArticleContext);\r\n\r\n  const ref = useRef([]);\r\n\r\n  const addRef = (div) => {\r\n    if (div && !ref.current.includes(div)) {\r\n      ref.current.push(div);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <h2>Tous les articles</h2>\r\n      <article>\r\n        {article.map((item) => {\r\n          return (\r\n            <div ref={addRef} key={v4()} className=\"item\">\r\n              <h4>{item.title}</h4>\r\n              <Link\r\n                to={{\r\n                  pathname: `/content/${item.title\r\n                    .replace(/\\s+/g, \"-\")\r\n                    .trim()}`,\r\n                  state: {\r\n                    title: item.title,\r\n                    content: item.content,\r\n                  },\r\n                }}\r\n              >\r\n                Lire l'article\r\n              </Link>\r\n            </div>\r\n          );\r\n        })}\r\n      </article>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Accueil);\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport \"./Form.css\";\r\nimport { ArticleContext } from \"../../Contexts/ArticleContext\";\r\n\r\nexport default function Form() {\r\n  const { addArticle } = useContext(ArticleContext);\r\n\r\n  const [titleState, setTitleState] = useState(\"\");\r\n  const [contentState, setContentState] = useState(\"\");\r\n  const [color, setColor] = useState(\"\");\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const linkedInput = (e) => {\r\n    setTitleState(e);\r\n  };\r\n\r\n  const linkedArea = (e) => {\r\n    setContentState(e);\r\n  };\r\n\r\n  const ajoutArt = (e) => {\r\n    e.preventDefault();\r\n    if (titleState.length < 2 || contentState.length < 2) {\r\n      setColor(\"color: green\");\r\n      setMessage(\"Veuillez renseigner au moins 20 caractères\");\r\n    } else {\r\n      addArticle({ title: titleState, content: contentState });\r\n      setTitleState(\"\");\r\n      setContentState(\"\");\r\n      setMessage(\"l'article a bien été ajouté\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      if (message !== \"\") {\r\n        setMessage(\"\");\r\n      }\r\n    }, 1500);\r\n  }, [message]);\r\n\r\n  return (\r\n    <div className=\"formulaire\">\r\n      <h2>Créer un nouvel article</h2>\r\n      <form onSubmit={(e) => ajoutArt(e)}>\r\n        <label htmlFor=\"title\">Entrez un titre :</label>\r\n        <input\r\n          value={titleState}\r\n          onInput={(e) => linkedInput(e.target.value)}\r\n          className=\"title\"\r\n          type=\"text\"\r\n          id=\"title\"\r\n        />\r\n\r\n        <label htmlFor=\"article\">Ecrire un article :</label>\r\n        <textarea\r\n          value={contentState}\r\n          onInput={(e) => linkedArea(e.target.value)}\r\n          className=\"body\"\r\n          id=\"article\"\r\n        />\r\n        <button>Envoyer</button>\r\n        <div style={{ color }} className=\"alert\">\r\n          {message}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Content.css\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nexport default function Content() {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <div className=\"container-article\">\r\n      <div className=\"content\">\r\n        <h2>{location.state.title}</h2>\r\n        <p>{location.state.content}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { createContext, useState, useEffect } from \"react\";\r\n\r\nexport const DarkModeContext = createContext();\r\n\r\nconst DarkModeContextProvider = (props) => {\r\n  const [toggleMode, setToggleMode] = useState(false);\r\n\r\n  const changeMode = () => {\r\n    setToggleMode(!toggleMode);\r\n  };\r\n\r\n  return (\r\n    <DarkModeContext.Provider value={{ toggleMode, changeMode }}>\r\n      {props.children}\r\n    </DarkModeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default DarkModeContextProvider;\r\n","import React, { useContext } from \"react\";\r\nimport \"./DarkBtn.css\";\r\nimport { DarkModeContext } from \"../Contexts/DarkModeContext\";\r\n\r\nexport default function DarkBtn() {\r\n  const { toggleMode, changeMode } = useContext(DarkModeContext);\r\n\r\n  return (\r\n    <div className=\"dark-btn\">\r\n      <button\r\n        onClick={changeMode}\r\n        className={toggleMode ? \"active-btn dark-mode\" : \"dark-mode\"}\r\n      >\r\n        <i className=\"fas fa-moon\"></i>\r\n        <i className=\"fas fa-sun\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport NavBar from \"./Components/NavBar/NavBar\";\nimport Accueil from \"./Containers/Accueil/Accueil\";\nimport Form from \"./Containers/Form/Form\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Content from \"./Containers/Content/Content\";\nimport DarkBtn from \"./Components/DarkBtn\";\nimport React, { useContext } from \"react\";\nimport { DarkModeContext } from \"./Contexts/DarkModeContext\";\n\nfunction App() {\n  const { toggleMode } = useContext(DarkModeContext);\n  return (\n    <div className={toggleMode ? \"App dark\" : \"App\"}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <NavBar />\n        <DarkBtn />\n        <Switch>\n          <Route path=\"/\" exact component={Accueil} />\n          <Route path=\"/form\" exact component={Form} />\n          <Route path=\"/content/:slug\" exact component={Content} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport ArticleContextProvider from \"./Contexts/ArticleContext\";\nimport DarkModeProvider from \"./Contexts/DarkModeContext\";\n\nReactDOM.render(\n  <DarkModeProvider>\n    <ArticleContextProvider>\n      <App />\n    </ArticleContextProvider>\n  </DarkModeProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}